# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Tag+Publish new Release - Auto Version
on:
  # manually run
  workflow_dispatch:

# Allow GitHub Actions to push changes to the repository (update version, tags etc)
permissions:
  contents: write

env:
  IS_CI: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Setup build cache
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      # Setup git config of the GitHub Actions Bot
      - name: Setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      # Run release task
      # The GITHUB_USERNAME and GITHUB_TOKEN need to correspond to the credentials environment variables used in
      # the publishing section of your build.gradle
      # see https://docs.github.com/en/actions/publishing-packages/publishing-java-packages-with-gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper
      - name: Release with Gradle Release Plugin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Github username: ${GITHUB_ACTOR}"
          gradle -Prelease.useAutomaticVersion=true release