# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI Build
on:
  push:
    branches:
    - main
    - develop
    - release/*
    paths-ignore:
      - '*.md'
      - '**/*.md'
      - '*.nix'
      - 'bin/*.sh'
  pull_request:
    branches:
      - main
      - develop
      - release/*
      - bugfix/*
      - bug/*
      - hotfix/*
      - feature/*
    paths-ignore:
      - '*.md'
      - '**/*.md'
      - '*.nix'
      - 'bin/*.sh'
  workflow_call:
# cancel an existing build if new changes have been pushed to the branch or PR
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  IS_CI: true

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

permissions:
  contents: read

jobs:
  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 19
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
      # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0

  build:
    strategy:
      matrix:
        include:
          - target: iosSimulatorArm64Test
            os: macos-latest
          - target: jvmTest
            os: ubuntu-latest
          - target: linuxX64Test
            os: ubuntu-latest
          - target: testDebugUnitTest
            os: ubuntu-latest
          - target: testReleaseUnitTest
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Setup build cache
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      # Setup git config of the GitHub Actions Bot
      - name: Setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper
      - name: Cache KMP tooling
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle.kts') }}
      - name: Build Project
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USER: ${{ secrets.CURRENT_GITHUB_USER }}
        run: |
          gradle ${{ matrix.target }} --stacktrace
